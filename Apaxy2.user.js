// ==UserScript==
// @name         Apaxy 2
// @version      0.1
// @description  Directory Listing
// @author       Varun Agrawal <Varun@VarunAgw.com>
// @homepage     https://www.VarunAgw.com
// @source       https://github.com/VarunAgw/Apaxy-2
// @supportURL   https://github.com/VarunAgw/Apaxy-2
// @updateURL    https://github.com/VarunAgw/Apaxy-2/raw/master/Apaxy2.user.js
// @match        *://*/*
// @run-at       document-end
// @require      https://code.jquery.com/jquery-2.2.4.min.js
// @grant        GM_getResourceText
// @grant        GM_addStyle
// @resource     style.css          https://raw.githubusercontent.com/VarunAgw/Apaxy-2/master/Apaxy/style.css
// @resource     base.htm           https://raw.githubusercontent.com/VarunAgw/Apaxy-2/master/Apaxy2/base.htm
// @resource     style.css.override https://raw.githubusercontent.com/VarunAgw/Apaxy-2/master/Apaxy2/style.css
// @resource     icon_sprite.json   https://raw.githubusercontent.com/VarunAgw/Apaxy-2/master/AutoGenerated/icon_sprite.json
// @resource     file_types.json    https://raw.githubusercontent.com/VarunAgw/Apaxy-2/master/AutoGenerated/file_types.json
// ==/UserScript==

function parse_document(content) {
    var output = [];
    $dom = $('<html>').html(content);
    $head = $dom.find(">head");
    $body = $dom.find(">body");

    if (1 == 2) {

    } else if (1 === $body.find(">pre").length && "white" === $body.attr("bgcolor")) {
        // nginx
        $body.find(">pre").find(":nth(0)").remove();
        $body.find(">pre").html($body.find(">pre").html().trim());
        if ("" === $body.find(">pre").html()) {
            return output;
        }
        $.each($body.find(">pre").html().trim().split("\n"), function (index, row) {
            $row = $("<span>").html(row);
            content = $row.contents().eq(1).text().trim().split(/(^.*?(?=  ))|(\d+$)/);
            output.push({
                Name: decodeURIComponent($row.find(">a").attr('href')).replace(/\/$/, ""),
                IsDir:  decodeURIComponent($row.find(">a").attr('href')).search(/\/$/) !== -1,
                LastModified: content[1],
                Size: content[1] == "-" ? "" : content[5],
            });
        });
    } else if (1 === $body.find(">pre").length && undefined === $body.attr("bgcolor")) {
        // Apache (-HTMLTable +FancyIndexing)
        $body.find(">pre").find("hr,:nth(0),:nth(1),:nth(2),:nth(3),:nth(4)").remove();
        $body.find(">pre").html($body.find(">pre").html().trim());
        $.each($body.find(">pre").html().split("\n"), function (index, row) {
            $row = $("<span>").html(row);
            content = $row.contents().eq(3).text().trim().split(/  /);
            output.push({
                Icon: $row.find(">img").attr('src'),
                Name: decodeURIComponent($row.find(">a").attr('href')).replace(/\/$/, ""),
                IsDir:  decodeURIComponent($row.find(">a").attr('href')).search(/\/$/) !== -1,
                LastModified: content[0],
                Size: content[1] == "-" ? "" : content[1],
            });
        });

    } else if(1 === $body.find(">ul").length) {
        // Apache (-HTMLTable -FancyIndexing)
        $body.find(">ul>li").each(function (index, row) {
            output.push({
                Name: decodeURIComponent($(row).find(">a").attr('href')).replace(/\/$/, ""),
                IsDir: decodeURIComponent($(row).find(">a").attr('href')).search(/\/$/) !== -1,
            });
        });

    } else if (1 === $body.find(">table").length) {
        // Apache (+HTMLTable +/-FancyIndexing)
        $rows = $body.find(">table>tbody");
        $rows.find('>tr').has('>th').remove();
        $rows.find(">tr:nth(0)").remove();
        $rows.children().each(function(index, row){
            $row = $(row).children();
            output.push({
                Icon: $row.eq(0).find(">img").attr('src'),
                Name: decodeURIComponent($row.eq(1).find(">a").attr('href')).replace(/\/$/, ""),
                IsDir:  decodeURIComponent($row.eq(1).find(">a").attr('href')).search(/\/$/) !== -1,
                LastModified: $row.eq(2).text().trim(),
                Size: $row.eq(3).text().trim() == "-" ? "" : $row.eq(3).text().trim(),
            });
        });
    }
    return output;
}

function get_icon (type) {
    var file_types = JSON.parse(GM_getResourceText("file_types.json"));
    var sprite = JSON.parse(GM_getResourceText("icon_sprite.json"));

    if (undefined !== file_types[type]) {
        return sprite.canvas.sprites.find(function(ob){return ob.name == file_types[type];}).src;
    } else if (undefined !== sprite.canvas.sprites.find(function(ob){return ob.name == type;})) {
        return sprite.canvas.sprites.find(function(ob){return ob.name == type;}).src;
    } else {
        return sprite.canvas.sprites.find(function(ob){return ob.name == "default";}).src;
    }
}

function get_extension(filename) {
    var extension = filename.match(/\.([a-z0-9]+)$/);
    if (null === extension) {
        extension = "";
    } else {
        extension = extension[1];
    }
    return extension;
}


// return;
if ($('head').find('>title').text().indexOf("Index of /") !==0 || $('body').find('>h1').text().indexOf("Index of /") !==0) {
    return;
}
var rows = parse_document(document.documentElement.outerHTML);
$("html").html(GM_getResourceText("base.htm"));
GM_addStyle(GM_getResourceText("style.css"));
GM_addStyle(GM_getResourceText("style.css.override"));
$("title").text("Index of " + document.location.pathname + "by Apaxy 2");


var $sample_row = $("tr.odd_even").detach();

var parent_dir = document.location.pathname.match(/^(.*\/)[^/]*\/$/);
if (parent_dir !== null) {
    var $row = $sample_row.clone();
    $row.removeClass("odd_even").addClass("parent");
    $row.find(">td.indexcolicon>img").attr('src', get_icon("folder-home"));
    $row.find(">td.indexcolname>a").text("Parent Directory");
    $row.find(">td.indexcolname>a").attr("href", parent_dir[1]);
    $("#indexlist").append($row);
}

$.each(rows, function (index, row) {
    var $row = $sample_row.clone();
    if (0 === index % 2) {
        $row.removeClass("odd_even").addClass("even");
    } else {
        $row.removeClass("odd_even").addClass("odd");
    }

    $row.find(">td.indexcolname>a").text(row.Name);
    $row.find(">td.indexcolname>a").attr("href", row.Name);
    $row.find(">td.indexcollastmod").text(row.LastModified);
    $row.find(">td.indexcolsize").text(row.Size !== "" ? row.Size : "-");

    if (true === row.IsDir) {
        $row.find(">td.indexcolicon>img").attr('src', get_icon("folder"));
    } else if ("" !== get_extension(row.Name)) {
        $row.find(">td.indexcolicon>img").attr('src', get_icon(get_extension(row.Name)));
    } else {
        $row.find(">td.indexcolicon>img").attr('src', get_icon("default"));
    }

    $("#indexlist").append($row);
});